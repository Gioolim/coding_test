### ■ 탐욕 알고리즘

   머신러닝 학습 시 의사결정트리를 파이썬 코드로 구현할 때 사용되는 알고리즘 中 하나
   매 순간마다 최선의 선택을 하는 것을 말합니다.
선택할 때마다 가장 좋다고 생각되는 것을 선택해 나가며 최종적인 해답을 구하는 알고리즘입니다.
   이 알고리즘을 설계할 때 주의할 점은 전체를 고려하는 것이 아니라 문제를 부분적으로 나누어 나누어진 문제에 대한 최적의 해답을 구하게끔 해야한다는 점입니다.

#### 예제. 14원의 잔돈을 지급할 때 잔돈의 종류가 10원, 7원, 1원이 있으면 잔돈을 가장 빨리 줄 수 있는 방법은?

답: 7원 * 2개

탐욕 알고리즘은 10원 1개, 7원 0개, 1원 4개를 준다.
(가장 큰 것부터 우선적으로 선택하고 본다.)

#### 탐욕 알고리즘을 풀기 위한 문제 1. 14를 10으로 나눈 몫을 출력하시오!

print(14 // 10)

#### 탐욕 알고리즘을 풀기 위한 문제 2. 14를 10으로 나눈 나머지 값을 출력하시오!

print(14 % 10)

#### 탐욕 알고리즘을 파이썬으로 구현하시오!

greedy()

거슬러줄 돈을 입력하세요 ~ 14

10원 동전 1개, 7원 동전 0개, 1원 동전 4개로 줍니다.

거슬러줄 돈을 입력하세요 ~ 107

10원 동전 10개, 7원 동전 1개, 1원 동전 0개로 줍니다.

def greedy():
    coin = [ 10, 7, 1 ]
    coin2 = []
    
    num = int(input('거슬러줄 돈을 입력하세요 ~ '))

    # 탐욕 알고리즘으로 잔돈 계산하기
    for i in coin:
        coin2.append(num // int(i))
        num %= int(i)

    # 잔돈 지급 출력문
    print('10원 동전 %d개, 7원 동전 %d개, 1원 동전 %d개로 줍니다.'
          %(coin2[0], coin2[1], coin2[2]))
        
greedy()
